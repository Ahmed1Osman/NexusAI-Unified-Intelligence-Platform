[
  {
    "id": 1,
    "content": "# Unified Agent\n\nA Python-based agent that combines text processing, memory capabilities, and user information management in a single interface. The agent can process text inputs, generate responses using various AI models, remember important information, and maintain user context.\n\n## Features\n\n- Text-based interaction with multiple AI models\n- Memory storage and retrieval system\n- User information tracking and management\n- Support for multiple AI providers via OpenRouter\n- Simple command-line interface\n\n## Setup\n\n1. Install the required dependencies:\n   ```\n   pip install -r requirements.txt\n   ```\n\n2. Create a `.env` file in the project root with your API keys:\n   ```\n   OPENAI_API_KEY=your_openai_api_key_here\n   ```\n\n3. Run the agent:\n   ```\n   python agent.py\n   ```\n\n## Usage\n\nRun the unified agent:\n```\npython unified_agent.py\n```\n\n### Commands\n\n- `!memory` - Memory management commands\n  - `!memory add <content>` - Add a new memory\n  - `!memory search <query>` - Search memories\n  - `!memory tag <id> <tag>` - Add tag to memory\n  - `!memory list` - List all memories\n- `!user` - User information commands\n  - `!user set <key> <value>` - Set user information\n  - `!user get <key>` - Get specific user information\n  - `!user list` - List all user information\n  - `!user clear` - Clear all user information\n- `!model` - View or change AI model\n  - `!model <name>` - Switch to a specific model (gemini, gpt, claude, mistral, deepseek)\n- `!mode` - Change agent mode\n  - `!mode <name>` - Switch to a specific mode (chat, memory, info)\n- `!api:<name>` - Change text processing API (openrouter, huggingface)\n- `!status` - Show current agent status\n- `!exit` - Quit the application\n\n## Note\n\nThis is a practice project and not intended for business use.\n",
    "tags": [
      "other",
      "document",
      "README.md"
    ],
    "source": "D:\\Users\\ao920\\Desktop\\New folder (2)\\README.md",
    "created_at": "2025-05-31T05:00:42.449915",
    "last_accessed": "2025-05-31T05:09:16.249301"
  },
  {
    "id": 2,
    "content": "Ahmed Othman  AI Engineer\n\nao9200004@gmail.com \n\n01090294387 \n\nLinkedIn \n\nGitHub \n\nMedium \n\nKaggle \n\nProfile\n\nSpecialized LLM Engineer with expertise in building autonomous AI agent systems and multi-agent frameworks. Proven \nexperience in developing self-evolving knowledge graphs, RAG systems, and intelligent chatbots using cutting-edge LLM \ntechnologies. Skilled in agent orchestration, tool-calling mechanisms, and building production-ready AI systems with Python, \nTensorFlow, and PyTorch.\n\nEducation\n\nB.Sc. in Computer Science & Artificial intelligence\nNile University\n\nGrade :Very Good\n\nGraduation Project\n\n2021 \u2013 2025\n\nMAYOM - Self-Evolving Knowledge Graph Framework for Enhanced RAG Systems\n\n05/2025\n\n\u2022Led development of autonomous AI agent framework enabling LLMs to independently \nconstruct and enrich knowledge graphs, implementing multi-agent orchestration with \nspecialized roles for knowledge extraction, validation, and graph construction, while building \nagent-to-agent communication protocols for collaborative knowledge building.\n\u2022Technologies: Llama3, Neo4j, Ollama, Light Graph, Graph RAG, React, LangChain.\n\nProjects\n\nTherapeutic Chatbot with Neo4j Knowledge Graph\n\n04/2025\n\n\u2022Developed conversational AI agent with 107,000-relation knowledge graph for mental health \ndiagnosis, implementing multi-turn dialogue management and context-aware response \ngeneration that outperformed Bio_ClinicalBERT and Llama-3_70B across single-turn and \nmulti-turn test scenarios, while building agent memory systems for patient interaction history \nand personalized responses.\n\u2022Technologies: Neo4j, Llama-3_70B, TogetherAI, Gemini, Agent Memory Systems\n\nOCR Processing Agent with Custom Pipeline\n\n03/2025\n\n\u2022Built document processing agent with intelligent preprocessing and text extraction \ncapabilities, implementing multi-stage agent workflow for document analysis and quality \nassessment, deployed via cloud-based agent architecture on Streamlit Cloud for scalable \ndocument processing.\n\u2022Technologies: Python, OpenCV, Tesseract, Streamlit, Docker, Agent Pipelines\n\nComputer Vision Interactive Game & Model Benchmarking Platform\n\n02/2025\n\n\u2022Developed multi-modal AI agent integrating pose detection, facial expression recognition, \nand object tracking with intelligent agent decision-making for real-time computer vision task \nrouting, implementing model comparison agents (MediaPipe/MoveNet, YOLOv8/SSD) with \nautomated performance benchmarking capabilities.\n\u2022Technologies: OpenCV, TensorFlow, MediaPipe, YOLOv8, Agent Orchestration\n\nSoccer Jersey Generation using Adversarial Neural Networks\n\n\u2022Focused on generating unique and innovative soccer jersey designs\n\u2022Models: Generative Adversarial Networks(GANs)\n\u2022Tools: TensorFlow/Keras - StyleGAN - Beautiful Soup - Selenium - Image Augmentation - Flask \n- JS\n\n1 / 2\fProfessional Experience & Internships\n\nAI Instructor, Inno Code\n\n\u2022Lead comprehensive AI diploma program covering Python fundamentals through deep \nlearning, NLP, and computer vision applications\n\nJunior Teaching Assistant, Nile University\n\nTeaching the ''Data Science\" reviewing lab tasks with students,and grading their assignments.\n\nAI Engineer, National Telecommunication Institute\n\n\u2022Collaborated on Arabic NLP tasks, including WS , LLM development for language applications.\n\nNLP Engineer, Smsm\n\n\u2022Built web scraping agents with intelligent content extraction and processing capabilities, \nwhile developing Arabic language processing agents for automated content generation and \nmultilingual text analysis workflows.\n\nMachine Learning Engineer, Technocolabs Softwares\n\n\u2022Led a team in data collection, data analysis, modeling, and deployment. \n\u2022Completed two real-life projects: Big Mart Sales Prediction , Hit Songs Predictor Web-App \n\nFreelance Projects\n\nFreelance Web Developer\nArt Gallery Project\n\n\u2022Developed a React-based digital gallery platform with integrated AI chatbot, enhancing user \nengagement and navigation efficiency\n\u2022Implemented secure database architecture using Supabase and Firebase for seamless artwork \nmanagement and user interactions\n\u2022Delivered a complete solution with optimized performance metrics, meeting all client \nspecifications on schedule\n\n03/2025 \u2013 present\nPart Time\n\n10/2024 \u2013 02/2025\nPart Time\n\n08/2024 \u2013 10/2024\nTraining (80 hours)\n\n03/2024 \u2013 05/2024\nInternship\n\n07/2023 \u2013 09/2023\ninternship\n\n02/2025\n\nSkills\n\nPython, C++, Java.\n\nTools\n\nGit, Docker, AWS, MLflow\n\nCertificates\n\nFrameworks/Libraries\n\nTensorFlow, PyTorch, Hugging Face Transformers, \nOpenCV, YOLO, RNNs &LSTMs,LangChain,LangGraph, \nAutoGen, CrewAI.\n\nMachine Learning Specialization\n\nDeep Learning Specialization\n\nNatural Language Processing Specialization\n\nLarge Language Model Operations (LLMOps) Specialization\n\n|||2 / 2\f",
    "tags": [
      "other",
      "document",
      "CV.pdf"
    ],
    "source": "file:///D:/Users/ao920/Desktop/desktop/personal%20doc/CV/CV.pdf",
    "created_at": "2025-05-31T05:08:10.720087",
    "last_accessed": "2025-05-31T05:09:16.249331"
  },
  {
    "id": 3,
    "content": "Me when | realise | need to\nlearn linear algebra for\nmachine learning\n\n=\n\\ os\n\n",
    "tags": [
      "ocr",
      "image",
      "1740231055957.jfif"
    ],
    "source": "D:\\Users\\ao920\\Desktop\\desktop\\comic\\1740231055957.jfif",
    "created_at": "2025-05-31T05:17:49.725558",
    "last_accessed": "2025-05-31T05:17:49.725572"
  }
]